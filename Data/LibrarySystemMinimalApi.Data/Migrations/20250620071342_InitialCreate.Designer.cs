// <auto-generated />
using LibrarySystemMinimalApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibrarySystemMinimalApi.Data.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250620071342_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibrarySystemMinimalApi.Domain.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BookId");

                    b.HasIndex("Author")
                        .HasDatabaseName("IX_Books_Author");

                    b.HasIndex("Category")
                        .HasDatabaseName("IX_Books_Category");

                    b.HasIndex("Title", "PublicationYear")
                        .IsUnique()
                        .HasDatabaseName("IX_Books_Title_Year");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            BookId = -1,
                            Author = "F. Scott Fitzgerald",
                            Category = 0,
                            IsAvailable = true,
                            PublicationYear = 1925,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            BookId = -2,
                            Author = "Harper Lee",
                            Category = 0,
                            IsAvailable = true,
                            PublicationYear = 1960,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            BookId = -3,
                            Author = "George Orwell",
                            Category = 0,
                            IsAvailable = true,
                            PublicationYear = 1949,
                            Title = "1984"
                        },
                        new
                        {
                            BookId = -4,
                            Author = "Stephen Hawking",
                            Category = 1,
                            IsAvailable = true,
                            PublicationYear = 1988,
                            Title = "A Brief History of Time"
                        },
                        new
                        {
                            BookId = -5,
                            Author = "Eric Carle",
                            Category = 2,
                            IsAvailable = true,
                            PublicationYear = 1969,
                            Title = "The Very Hungry Caterpillar"
                        });
                });

            modelBuilder.Entity("LibrarySystemMinimalApi.Domain.Entities.Members.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<int>("BorrowedBooksCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MemberID");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Members_Name");

                    b.ToTable("Members", (string)null);

                    b.HasDiscriminator<string>("MemberType").HasValue("Member");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LibrarySystemMinimalApi.Domain.Entities.Members.RegularMember", b =>
                {
                    b.HasBaseType("LibrarySystemMinimalApi.Domain.Entities.Members.Member");

                    b.HasDiscriminator().HasValue("Member");
                });

            modelBuilder.Entity("LibrarySystemMinimalApi.Domain.Entities.Staff.ManagementStaff", b =>
                {
                    b.HasBaseType("LibrarySystemMinimalApi.Domain.Entities.Members.Member");

                    b.HasDiscriminator().HasValue("ManagementStaff");
                });

            modelBuilder.Entity("LibrarySystemMinimalApi.Domain.Entities.Staff.MinorStaff", b =>
                {
                    b.HasBaseType("LibrarySystemMinimalApi.Domain.Entities.Members.Member");

                    b.HasDiscriminator().HasValue("MinorStaff");
                });
#pragma warning restore 612, 618
        }
    }
}
